[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ethiopian-ner-system"
version = "1.0.0"
description = "Ethiopian Telegram E-commerce NER System with Vendor Analytics"
authors = [
    {name = "Ethiopian NER Team", email = "team@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "telethon>=1.34.0",
    "pandas>=2.1.4",
    "numpy>=1.24.3",
    "scikit-learn>=1.3.2",
    "transformers>=4.36.2",
    "torch>=2.1.2",
    "datasets>=2.16.1",
    "streamlit>=1.29.0",
    "plotly>=5.17.0",
    "matplotlib>=3.8.2",
    "seaborn>=0.13.0",
    "loguru>=0.7.2",
    "pyyaml>=6.0.1",
    "tqdm>=4.66.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "black>=23.12.1",
    "flake8>=6.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]
interpretability = [
    "shap>=0.44.1",
    "lime>=0.2.0.1",
]
nlp = [
    "nltk>=3.8.1",
    "spacy>=3.7.2",
]

[project.urls]
Homepage = "https://github.com/your-username/ethiopian-ner-system"
Repository = "https://github.com/your-username/ethiopian-ner-system"
Documentation = "https://your-username.github.io/ethiopian-ner-system"
"Bug Tracker" = "https://github.com/your-username/ethiopian-ner-system/issues"

[project.scripts]
ethiopian-ner = "scripts.main_pipeline:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 127
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 127
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]